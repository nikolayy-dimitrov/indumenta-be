import { NormalizedBbox, TaxonID, TaxonPrediction } from "./common";
import type { Image } from "./image";
import type { Dragoneye } from "./index";
export interface ClassificationTraitRootPrediction {
    id: TaxonID;
    name: string;
    displayName: string;
    taxons: TaxonPrediction[];
}
export interface ClassificationObjectPrediction {
    normalizedBbox: NormalizedBbox;
    category: TaxonPrediction;
    traits: ClassificationTraitRootPrediction[];
}
export interface ClassificationPredictImageResponse {
    predictions: ClassificationObjectPrediction[];
}
export interface ClassificationPredictImageRequest {
    image: Image;
    modelName: string;
}
export declare class Classification {
    private client;
    protected _client: Dragoneye;
    constructor(client: Dragoneye);
    predict({ image, modelName, }: ClassificationPredictImageRequest): Promise<ClassificationPredictImageResponse>;
}
